#!/usr/bin/env python

from gpioone import *

import random
import unscii

def demo(size):
    ssd = SSD1306(row_size=size)

    print("Clearing Screen")
    ssd.clear_screen()
    sleep(1)

    print("Testing Print Functions")
    for i in range(0,ssd.pages):
        string = "Page %d." % i
        for j in range(i):
            string += "."


        ssd.print_line(string,row=i,column=i)

    sleep(5)

    print("TESTING PARTIAL UPDATE")
    ssd.clear_screen()
    ssd.print_line("T Minus 11!",row=2,column=0)
    for i in range(10):
        sleep(0.1)
        ssd.print_string("%d   " % (10 - i), row=2, column=len("T Minus "))

    ssd.clear_screen()
    print("Random Bytes")
    for i in range(ssd.pages):
        ssd.set_row_and_column(i,0)
        for j in range(16):
            ssd.print_bytes(random.sample(range(256),8))
            sleep(0.1)

    print("Normal UNSCII Fonts")
    for font in unscii.fonts():
        ssd.set_font(font)
        if (ssd.unscii.size() == 1) and ssd.unscii.transposed():
            ssd.print_line("UNSCII Font...",row=0,column=0)
            ssd.print_line(font.replace("_transposed", "").replace("_", " "),row=1,column=0)
            if ssd.pages == 4:
                ssd.print_line("abcdefghABCDEFGH",row=2,column=0)
                ssd.print_line("1234567890!@#$%^",row=3,column=0)
            else:
                ssd.print_line("abcdefghijklmnop",row=2,column=0)
                ssd.print_line("qrstubwzyz      ",row=3,column=0)
                ssd.print_line("ABCDEFGHIJKLMNOP",row=4,column=0)
                ssd.print_line("QRSTUVWXYZ      ",row=5,column=0)
                ssd.print_line("1234567890!@#$%^",row=6,column=0)
                ssd.print_line("<>?:\\![],./     ",row=7,column=0)
            sleep(5)
                       
    print("Double High UNSCII Fonts")
    for font in unscii.fonts():
        ssd.set_font(font)

        if (ssd.unscii.size() == 2) and ssd.unscii.transposed():
            print(font)

            ssd.print_line("UNSCII Font...",row=0,column=0)
            ssd.print_line(font.replace("_transposed", "").replace("_", " "),row=2,column=0)
            if ssd.pages > 4:
                ssd.print_line("abcdefghABCDEFGH",row=4,column=0)
                ssd.print_line("1234567890!@#$%^",row=6,column=0)

            sleep(5)
                       
        
    # STILL NEED SOME API WORK
    print("SCROLL TESTS")
    if ssd.pages == 4:
        start_row = 0
    else:
        start_row = 2
    ssd.set_font("unscii_8_mcr_transposed")
    ssd.clear_screen()
    ssd.print_string("SCROLLING",row=0+start_row,column=4)
    ssd.print_string("IS",row=1+start_row,column=7)
    ssd.print_string("FUN",row=2+start_row,column=8)
    ssd.print_string("BUSINESS", row=3+start_row,column=4)
    ssd.send_command("RIGHT_HORIZONTAL_SCROLL", 0x0, 0x0, 0x0, 0x7, 0x0, 0xff)
    ssd.activate_scroll()
    sleep(3)
    ssd.deactivate_scroll()
    ssd.send_command("LEFT_HORIZONTAL_SCROLL", 0x0, 0x0, 0x0, 0x7, 0x0, 0xff)
    ssd.activate_scroll()
    sleep(3)
    ssd.deactivate_scroll()
    ssd.send_command("LEFT_HORIZONTAL_SCROLL", 0x0, 0x0, 0x0, 0x7, 0x0, 0xff)
    ssd.send_command("VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL", 0x0, 0x0, 0x0, 0x7, 0x01)
    ssd.activate_scroll()
    sleep(3)
    ssd.deactivate_scroll()
    print("GOODBYE")
    

if __name__ == "__main__":
    s = SetupExample(help="128x32 or 128x64 display")

    s.rv("ROW_SIZE","Row Size: 32 or 64")

    s.setup()

    demo(s.ROW_SIZE)
